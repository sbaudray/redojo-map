// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Map$MyProjectName = require("./Map.bs.js");
var Fetcher$MyProjectName = require("./Fetcher.bs.js");

var component = ReasonReact.reducerComponent("MapContainer");

function make(username, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              Fetcher$MyProjectName.fetchPost("https://immense-river-25513.herokuapp.com/add-location", username);
              return Fetcher$MyProjectName.fetchGet("https://immense-river-25513.herokuapp.com/locations", (function (response) {
                            return Curry._1(self[/* send */3], /* UpdateMarkers */[$$Array.map((function ($$location) {
                                                var match = $$location.location;
                                                return {
                                                        coordinates: /* tuple */[
                                                          match[1],
                                                          match[0]
                                                        ],
                                                        name: $$location.username,
                                                        markerOffset: 0
                                                      };
                                              }), response)]);
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              return ReasonReact.element(/* None */0, /* None */0, Map$MyProjectName.make(param[/* state */1], /* array */[]));
            }),
          /* initialState */(function () {
              return /* array */[];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [action[0]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
